<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_b_collied</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SETUP
event_inherited();
previous_sprite = spr_p_e;
sprite_gather_north = spr_p_g_n;
sprite_gather_south = spr_p_g_s;
sprite_gather_east = spr_p_g_e;
gather_time = room_speed * 2;
gather_image_speed = 0.3;
gather_amount = 10;
gather_search_distance = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GATHERED RESOURCE
if (target != noone &amp;&amp; object_is_ancestor(target.object_index, o_b_resource)) {
    with (target) {
         if (amount &gt; 0) {
            amount -= other.gather_amount;
            other.amount += other.gather_amount; 
         } else { other.target = noone; }
    }
}
show_debug_message("GATHERED");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// STATE: GATHER
event_inherited();

if (state == "gather" &amp;&amp; alarm[1] &lt;= -1) {
    //if (distance_to_object(target) &lt;= sprite_width/2) {
       if (direction &gt;= 305 || direction &lt;= 45) sprite_index = sprite_gather_east;
        else if (direction &gt;= 46 &amp;&amp; direction &lt;= 135) sprite_index = sprite_gather_north;
        else if (direction &gt;= 136 &amp;&amp; direction &lt;= 225) {
            sprite_index = sprite_gather_east;
            image_xscale = -1;    
        }
        else if (direction &gt;= 226 &amp;&amp; direction &lt;= 304) sprite_index = sprite_gather_south;
       image_speed = gather_image_speed;
       alarm[1] = gather_time;
    //}
      
    if (target != noone &amp;&amp; object_is_ancestor(target.object_index, o_b_resource)) {
        var nearest = noone;
        var distance = gather_search_distance;
        for (ida = 0; ida &lt;= instance_number(o_b_resource); ida++) {
            var close = instance_find(o_b_resource, ida);
            if (close != noone) {
               if (close == target || close.type != target.type) close = noone;
            }
            if (close != noone) {
                if (close.amount &gt; 0) {
                   var near_object = distance_to_object(close);
                   if (near_object &lt; distance) {
                      distance = near_object;
                      nearest = close;
                   }
                }
            }
        }
        if (target.amount &lt;= 0) {
           if (nearest != noone) {
              next_state = "move";
              target = nearest;
           }
           else target = noone;
        }
    } else { target = noone; }
    if (target == noone) {
       next_state = "look";
    }
    if (next_state != "gather") alarm[1] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
draw_set_colour(c_green);
draw_circle(x,y,gather_search_distance,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
